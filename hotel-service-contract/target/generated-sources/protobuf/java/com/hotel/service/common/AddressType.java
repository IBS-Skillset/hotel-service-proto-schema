// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/hotel/service/common/address_type.proto

package com.hotel.service.common;

public final class AddressType {
  private AddressType() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hotel_service_common_Address_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hotel_service_common_Address_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+com/hotel/service/common/address_type." +
      "proto\022\030com.hotel.service.common\"r\n\007Addre" +
      "ss\022\026\n\016street_address\030\001 \001(\t\022\021\n\tcity_name\030" +
      "\002 \001(\t\022\020\n\010zip_code\030\003 \001(\t\022\024\n\014country_name\030" +
      "\004 \001(\t\022\024\n\014country_code\030\005 \001(\tB)\n\030com.hotel" +
      ".service.commonB\013AddressTypeP\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_hotel_service_common_Address_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_hotel_service_common_Address_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hotel_service_common_Address_descriptor,
        new java.lang.String[] { "StreetAddress", "CityName", "ZipCode", "CountryName", "CountryCode", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
